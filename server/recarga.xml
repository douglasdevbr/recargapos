<!-- App Name:: Recarga RP -->
<!--- Author : Douglas Silva -->
<!-- Date: 01/12/2016 -->

<stringvariable value="filesetup.json" variable="sFilesetup" />
<stringvariable value="" variable="sMessage" />
<integervariable value="0" variable="LoginType" />

<stringvariable value="" variable="sPosSerialNumber" />
<stringvariable value="" variable="sUf" />
<integervariable value="0" variable="sUfLength" />
<stringvariable value="" variable="dsPassword" />
<integervariable value="0" variable="iRet" />
<integervariable value="0" variable="sBufferSize" />
<integervariable value="0" variable="iConnect" />
<integervariable value="0" variable="iReturn" />
<stringvariable value="" variable="sBuffer" />
<stringvariable value="" variable="sBufferReceive" />
<integervariable value="0" variable="iMenu" />
<stringvariable value="" variable="sBufReceived" />
<integervariable value="0" variable="ifileProductTableSize" />
<stringvariable value="" variable="sFileProductTableSize" />
<stringvariable value="" variable="$(sDateUpdate)" />
<integervariable value="0" variable="iTotalUser" />
<stringvariable value="" variable="sModelName" />
<stringvariable value="" variable="sTemp" />
<integervariable value="0" variable="iTemp" />

<!-- init app -->

<callfunction name="FacedeApp" />
<!-- init app -->

<!-- Main Function -->
<function name="FacedeApp">

<!-- variables -->
<integervariable value="0" variable="iFileSetupSize" />
<stringvariable value="" variable="sFileSetupSize" /> 
<integervariable value="0" variable="ICheckFile" />
<stringvariable value=""   variable="sAuthData" />
<integervariable value="0" variable="iRetFacade" />
<integervariable value="0" variable="iAuthData" />

<stringvariable value="77" variable="GNPrefix" />
<stringvariable value="65" variable="OPPrefix" />
<stringvariable value="99" variable="SupportPrefix" />

<stringvariable value="" variable="AuthUserPassword" />

<filesystem.filesize filename="$(sFilesetup)" variablereturn="$(iFileSetupSize)" />
<inttostring variableinteger="$(iFileSetupSize)" variablestring="$(sFileSetupSize)" />


<if variable="$(iFileSetupSize)" operator="lessthanorequalto" value="0">

    <callfunction name="InitApp" />

</if>

<!-- checking the need of setup the application -->

<!-- checking auth info -->

<stringvariable value="" variable="sName" />
<json.getelement filename="$(sFilesetup)" jsonstring="Auth" jsonvalue="$(sAuthData)" variablereturn="$(iRetFacade)" />
<json.getelement filename="$(sFilesetup)" jsonstring="Name" jsonvalue="$(sName)" variablereturn="$(iRetFacade)" />

<!--<cleandisplay />-->
<!--<display line="0" column="0" message="display" />-->
<!--<display line="1" column="0" message="$(sAuthData)" />-->
<!--<waitkey />-->

<string.length value="$(sAuthData)" variablereturn="$(iAuthData)" />
<integervariable value="1" variable="loginTentativas" />
<if variable="$(iAuthData)" operator="greaterthan" value="0">

<!-- check the user was enable to aplly recharge -->
<while variable="$(loginTentativas)" operator="lessthanorequalto" value="3">
  
  
<!-- Sets  dsUSerPin -->
   
    <!-- <callfunction name="AuthUser" /> -->
    <!-- cheking e admin user has pin -->
  
    <!-- Sets dsUser dsPassword -->
    <callfunction name="AuthUser" />
    <cleandisplay />
    

    <!-- cheking e admin user has logon -->
   
    <!--<display line="1" column="0" message="$(AuthUserLogin)"/>-->
    <!--<waitkey />-->
    <!---->
   <!-- <string.getvaluebykey string="$(sAuthData)" key="$(AuthUserPassword)" variablereturn="$(AuthUserPassword)" /> -->
    <cleandisplay />
    <stringvariable value="$(dsPassword)" variable="$(AuthUserPassword)" />
    <if variable="$(AuthUserPassword)" operator="notequalto" value="">
    <stringvariable value="" variable="$(sCurrentPin)" />
    <stringvariable value="" variable="$(sCurrentPrefix)" />
    <integervariable value="0" variable="iCurrentPassword" />
       <string.elements string="$(sAuthData)" delimiter="|" variablereturn="$(iTotalUser)" />
       
       <while variable="$(iCurrentPassword)" operator="notequalto" value="$(iTotalUser)">
          <string.elementat string="$(AuthUserPassword)" element_index="$(iCurrentPassword)" delimiter="|" variablereturn="$(sCurrentPin)" />
         
         <if variable="$(AuthUserPassword)" operator="equalto" value="$(sCurrentPin)">
           <string.substring string="$(sCurrentPin)" start="0" length="2" variablereturn="$(sCurrentPrefix)" />
            <if variable="$(sCurrentPrefix)" operator="equalto" value="$(OPPrefix)">
              <integervariable value="2" variable="LoginType" />
              <else />
              <if variable="$(sCurrentPrefix)" operator="equalto" value="$(GNPrefix)">
              <integervariable value="1" variable="LoginType" />
              
            </if>
            
            </if>
            <if variable="$(sCurrentPrefix)" operator="equalto" value="$(SupportPrefix)">
             <integervariable value="3" variable="LoginType" />
            </if>
            <break />
        </if>
         <mathematicaloperation variabledestination="$(iCurrentPassword)" operator="+" firstvalue="$(iCurrentPassword)" secondvalue="1" />
       </while>
      
     </if>

   <if variable="$(LoginType)" operator="equalto" value="0">
      <cleandisplay />
        <display line="2" column="2" message="PIN INVALIDO!" />
        <display line="3" column="2" message="TENTE NOVAMENTE" />
        <stringvariable value="" variable="dsPassword" />
         <stringvariable value="" variable="dsPassword" />
        <waitkey />
   
        <else />
        <break />
    
   </if>
        <mathematicaloperation firstvalue="$(loginTentativas)" operator="+" secondvalue="1" variabledestination="$(loginTentativas)"/>
 </while>
 
 <!-- check if the total logon tries was reach -->
 <if variable="$(loginTentativas)" operator="equalto" value="3">
   <cleandisplay />
        <display line="2" column="0" message="Tentativas de login excedidas!" />
        <waitkey />
        
   <exit />
 </if>
 
  
</if>

<!-- checking auth info -->
<!-- display menu based on LoginType -->


<if variable="$(LoginType)" operator="equalto" value="1">
    <menuwithheader header="RedePay Recarga" timeoutheader="5"
                    options="1.Imprimir Relatorio de Vendas\2.Atualizar Tabelas\3.Sair" timeout="30" variablereturn="$(iMenu)"/>
    <!-- Print the list -->
    
   <if variable="$(iMenu)" operator="equalto" value="KEY_1">
     <cleandisplay />
     <display line="0" column="0" message="Relatorio de Vendas" />
     <waitkey />
     <exit />
     
   </if>
   
     <if variable="$(iMenu)" operator="equalto" value="KEY_3">
    
     <exit />
     
   </if>
   <waitkey />
 
</if>


<if variable="$(LoginType)" operator="equalto" value="2">

<stringvariable value="" variable="sCodeSell" />
<stringvariable value="" variable="sCarrier" />
<stringvariable value="" variable="sValue" />
<stringvariable value="" variable="sProdName" />
 <stringvariable value="" variable="sKey" />
 <integervariable value="0" variable="iPhoneLength" />
      <!-- phone inputs -->
      <stringvariable  value="" variable="iPhone" />
      <stringvariable  value="" variable="iPhone2" />
      <!-- checks if need update product table the ( this goes happen one time per day) -->
       <integervariable value="0" variable="iCheckFoneNumber" />
      <!--<callfunction name="LoadProductTable" />-->
      <integervariable value="0" variable="$(iMenuCarrier)" />
      <stringvariable value="" variable="sMenuCarrier" />
       <stringvariable value="" variable="sMenuChoice" />
       <stringvariable value="" variable="sProductChoice" />
      <json.getelement filename="$(sFilesetup)" jsonstring="Car" jsonvalue="$(sMenuCarrier)" variablereturn="$(iRet)" />
      <!--<json.getelement filename="producttable.json" jsonstring="PhoneCarriers" jsonvalue="$(sMenuCarrier)" variablereturn="$(iRet)" />-->
      <!-- Lock the main menu for the operator -->
      
     <cleandisplay />

     <integervariable value="0" variable="iTotalCarriers" />
     
     <stringvariable value="" variable="sTotalCarriers" />
     <stringvariable value="" variable="sTotalProducts" />
     <stringvariable value="KEY_" variable="sExit" />
       <stringvariable value="" variable="$(sProductsFrag)" />
     <integervariable value="0" variable="$(iProducts)" />
       
     <string.replace original_string="$(sMenuCarrier)" old_substring="|" new_substring="\" variablereturn="$(sMenuCarrier)" />
     <string.elements string="$(sMenuCarrier)" delimiter="\" variablereturn="$(iTotalCarriers)" />
     <integeroperator operator="++" variablesource="$(iTotalCarriers)" />
     <inttostring variableinteger="$(iTotalCarriers)" variablestring="$(sTotalCarriers)" />
      <joinstring firstvalue="$(sMenuCarrier)" secondvalue="\" variabledestination="$(sMenuCarrier)" />
     <joinstring firstvalue="$(sMenuCarrier)" secondvalue="$(sTotalCarriers)" variabledestination="$(sMenuCarrier)" />
     
     <joinstring firstvalue="$(sMenuCarrier)" secondvalue=".SAIR" variabledestination="$(sMenuCarrier)" />
    <joinstring firstvalue="$(sExit)" secondvalue="$(sTotalCarriers)" variabledestination="$(sExit)" />
 
     <cleandisplay />
     <if variable="$(sMenuCarrier)" operator="notequalto" value="">
      <while variable="$(iMenuCarrier)" operator="equalto" value="0">
       <stringvariable value="" variable="$(iPhone)" />
        <stringvariable value="" variable="$(iPhone2)" />
        <!-- keys  KEY_1 KEY_9 KEY_EXTRA10 (*)  KEY_EXTRA11(#) -->
           <!--  -->
           <string.trim string="$(sMenuCarrier)" variablereturn="$(sMenuCarrier)" />
           <menuwithheader header="Escolha Operadora" options="$(sMenuCarrier)" timeoutheader="15" timeout="99999" variablereturn="$(sMenuChoice)" />
           
           
           <!-- check if need exit app -->
           <if variable="$(sMenuChoice)" operator="equalto" value="$(sExit)">
           
             <exit />
           </if>
           
            <if variable="$(sMenuChoice)" operator="equalto" value="">
           <exit />
           </if>
             <if variable="$(sMenuChoice)" operator="equalto" value="KEY_CANCEL">
           <exit />
           </if>
           
           
           <!-- gets a phone data --> 
           <cleandisplay />
           
           <if variable="$(sMenuChoice)" operator="notequalto" value="">
             
           <display line="0" column="0" message="Digite DDD e Numero" />
           <inputformat variable="$(iPhone)" line="1" column="0" message="" format="99999999999" />
            <!--<inputinteger column="0" line="1" maximum="" minimum="" variable="$(iPhone)" message="" />-->
          
            <string.length value="$(iPhone)" variablereturn="$(iPhoneLength)" />
            <if variable="$(iPhoneLength)" operator="greaterthanorequalto" value="10"> 
            
            <if variable="$(iPhoneLength)" operator="lessthanorequalto" value="11">
              
              
            
            
            <!-- TIM -->
             <if variable="$(sMenuChoice)" operator="equalto" value="KEY_1">
             <stringvariable value="TIM" variable="sCarrier" />
             
             <stringvariable value="M61!TIMTURBO 9!9.00!0|M53!TIM R$10!10.00!0|M55!TIM R$15!15.00!0|M56!TIM R$20!20.00!0|M57!TIM R$30!30.00!0" variable="$(sTIM)" />
            
             <string.elements string="$(sTIM)" delimiter="|" variablereturn="$(iProducts)" />
             <integervariable value="0" variable="iCount" />
             <integervariable value="1" variable="iCounter" />
              <stringvariable value="" variable="$(sTotalProducts)" />
             <while variable="$(iCounter)" operator="lessthanorequalto" value="$(iProducts)">
               <string.elementat string="$(sTIM)" element_index="$(iCount)"  delimiter="|"   variablereturn="$(sProductsFrag)" />
              
               <string.elementat string="$(sProductsFrag)" element_index="1" delimiter="!" variablereturn="$(sProductsFrag)" />
               
               <stringvariable value="" variable="$(sCounter)" />
               <inttostring variableinteger="$(iCounter)" variablestring="$(sCounter)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="$(sCounter)" variabledestination="$(sTotalProducts)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="." variabledestination="$(sTotalProducts)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="$(sProductsFrag)" variabledestination="$(sTotalProducts)" />
              <joinstring firstvalue="$(sTotalProducts)" secondvalue="\" variabledestination="$(sTotalProducts)" />
              
                <mathematicaloperation variabledestination="$(iCount)" operator="+" firstvalue="1" secondvalue="$(iCount)" />
                <integeroperator operator="++" variablesource="$(iCounter)" />
            
             </while>
             
            <menuwithheader header="Recarga" options="$(sTotalProducts)" timeoutheader="14" timeout="20" variablereturn="$(sProductChoice)" />
          
             <stringvariable value="" variable="sIndexProduct" />
           
            <if variable="$(sProductChoice)" operator="notequalto" value="">
       
            <string.charat string="$(sProductChoice)" character_index="4" variablereturn="$(sIndexProduct)" />
            <stringtoint variablestring="$(sIndexProduct)" variableinteger="$(iCount)" />
            <integeroperator operator="--" variablesource="$(iCount)" />
            <string.elementat string="$(sTIM)" element_index="$(iCount)"  delimiter="|"   variablereturn="$(sProductsFrag)" />
            <string.elementat string="$(sProductsFrag)" element_index="0" delimiter="!" variablereturn="$(sCodeSell)" />
            <string.elementat string="$(sProductsFrag)" element_index="1" delimiter="!" variablereturn="$(sProdName)" />
            <string.elementat string="$(sProductsFrag)" element_index="2" delimiter="!" variablereturn="$(sValue)" />
           
            </if>
            
              
             </if>
              <!-- Claro --> 
              <if variable="$(sMenuChoice)" operator="equalto" value="KEY_2">
               <stringvariable value="Claro" variable="sCarrier" />
                <stringvariable value="" variable="$(sTIM)" />
                <stringvariable value="M42!CLARO R$10!10.00!0|M39!CLARO R$13!13.00!0|M59!CLARO R$15!15.00!0|M5!CLARO R$30!30.00!0" variable="$(sTIM)" />
         
                <!--- load the id 3  products -->
              <string.elements string="$(sTIM)" delimiter="|" variablereturn="$(iProducts)" />
             <integervariable value="0" variable="iCount" />
             <integervariable value="1" variable="iCounter" />
              <stringvariable value="" variable="$(sTotalProducts)" />
             <while variable="$(iCounter)" operator="lessthanorequalto" value="$(iProducts)">
               <string.elementat string="$(sTIM)" element_index="$(iCount)"  delimiter="|"   variablereturn="$(sProductsFrag)" />
              
               <string.elementat string="$(sProductsFrag)" element_index="1" delimiter="!" variablereturn="$(sProductsFrag)" />
               
               <stringvariable value="" variable="$(sCounter)" />
               <inttostring variableinteger="$(iCounter)" variablestring="$(sCounter)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="$(sCounter)" variabledestination="$(sTotalProducts)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="." variabledestination="$(sTotalProducts)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="$(sProductsFrag)" variabledestination="$(sTotalProducts)" />
              <joinstring firstvalue="$(sTotalProducts)" secondvalue="\" variabledestination="$(sTotalProducts)" />
              
                <mathematicaloperation variabledestination="$(iCount)" operator="+" firstvalue="1" secondvalue="$(iCount)" />
                <integeroperator operator="++" variablesource="$(iCounter)" />
            
             </while>
             
            <menuwithheader header="Recarga" options="$(sTotalProducts)" timeoutheader="14" timeout="20" variablereturn="$(sProductChoice)" />
          
             <stringvariable value="" variable="sIndexProduct" />
           
            <if variable="$(sProductChoice)" operator="notequalto" value="">
       
            <string.charat string="$(sProductChoice)" character_index="4" variablereturn="$(sIndexProduct)" />
            <stringtoint variablestring="$(sIndexProduct)" variableinteger="$(iCount)" />
            <integeroperator operator="--" variablesource="$(iCount)" />
            <string.elementat string="$(sTIM)" element_index="$(iCount)"  delimiter="|"   variablereturn="$(sProductsFrag)" />
            <string.elementat string="$(sProductsFrag)" element_index="0" delimiter="!" variablereturn="$(sCodeSell)" />
            <string.elementat string="$(sProductsFrag)" element_index="1" delimiter="!" variablereturn="$(sProdName)" />
            <string.elementat string="$(sProductsFrag)" element_index="2" delimiter="!" variablereturn="$(sValue)" />
           
            </if>
    
          </if>
              
               <!-- ViVo -->
               <if variable="$(sMenuChoice)" operator="equalto" value="KEY_3">
                  <stringvariable value="Vivo" variable="sCarrier" />
                   <stringvariable value="" variable="$(sTIM)" />
                   <stringvariable value="M36!VIVO R$5!5.00!0|M44!VIVO R$10!10.00!0|M41!VIVO R$15!15.00!0|M45!VIVO R$20!20.00!0" variable="$(sTIM)" />
                   
                   <!--- load the id 3  products -->
              <string.elements string="$(sTIM)" delimiter="|" variablereturn="$(iProducts)" />
             <integervariable value="0" variable="iCount" />
             <integervariable value="1" variable="iCounter" />
              <stringvariable value="" variable="$(sTotalProducts)" />
             <while variable="$(iCounter)" operator="lessthanorequalto" value="$(iProducts)">
               <string.elementat string="$(sTIM)" element_index="$(iCount)"  delimiter="|"   variablereturn="$(sProductsFrag)" />
              
               <string.elementat string="$(sProductsFrag)" element_index="1" delimiter="!" variablereturn="$(sProductsFrag)" />
               
               <stringvariable value="" variable="$(sCounter)" />
               <inttostring variableinteger="$(iCounter)" variablestring="$(sCounter)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="$(sCounter)" variabledestination="$(sTotalProducts)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="." variabledestination="$(sTotalProducts)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="$(sProductsFrag)" variabledestination="$(sTotalProducts)" />
              <joinstring firstvalue="$(sTotalProducts)" secondvalue="\" variabledestination="$(sTotalProducts)" />
              
                <mathematicaloperation variabledestination="$(iCount)" operator="+" firstvalue="1" secondvalue="$(iCount)" />
                <integeroperator operator="++" variablesource="$(iCounter)" />
            
             </while>
             
            <menuwithheader header="Recarga" options="$(sTotalProducts)" timeoutheader="14" timeout="20" variablereturn="$(sProductChoice)" />
          
             <stringvariable value="" variable="sIndexProduct" />
           
            <if variable="$(sProductChoice)" operator="notequalto" value="">
       
            <string.charat string="$(sProductChoice)" character_index="4" variablereturn="$(sIndexProduct)" />
            <stringtoint variablestring="$(sIndexProduct)" variableinteger="$(iCount)" />
            <integeroperator operator="--" variablesource="$(iCount)" />
            <string.elementat string="$(sTIM)" element_index="$(iCount)"  delimiter="|"   variablereturn="$(sProductsFrag)" />
            <string.elementat string="$(sProductsFrag)" element_index="0" delimiter="!" variablereturn="$(sCodeSell)" />
            <string.elementat string="$(sProductsFrag)" element_index="1" delimiter="!" variablereturn="$(sProdName)" />
            <string.elementat string="$(sProductsFrag)" element_index="2" delimiter="!" variablereturn="$(sValue)" />
           
            </if>
         
              
           </if>
             <!-- Oi -->
              <if variable="$(sMenuChoice)" operator="equalto" value="KEY_4">
                   <stringvariable value="Oi" variable="sCarrier" />
                    <stringvariable value="" variable="$(sTIM)" />
                    <stringvariable value="1971!OI R$8!8.00!0|1488!OI R$10!10.00!0|1419!OI R$14!14.00!0|1929!OI R$18!18.00!0" variable="$(sTIM)" />
                    
                     <!--- load the id 3  products -->
              <string.elements string="$(sTIM)" delimiter="|" variablereturn="$(iProducts)" />
             <integervariable value="0" variable="iCount" />
             <integervariable value="1" variable="iCounter" />
              <stringvariable value="" variable="$(sTotalProducts)" />
             <while variable="$(iCounter)" operator="lessthanorequalto" value="$(iProducts)">
               <string.elementat string="$(sTIM)" element_index="$(iCount)"  delimiter="|"   variablereturn="$(sProductsFrag)" />
              
               <string.elementat string="$(sProductsFrag)" element_index="1" delimiter="!" variablereturn="$(sProductsFrag)" />
               
               <stringvariable value="" variable="$(sCounter)" />
               <inttostring variableinteger="$(iCounter)" variablestring="$(sCounter)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="$(sCounter)" variabledestination="$(sTotalProducts)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="." variabledestination="$(sTotalProducts)" />
               <joinstring firstvalue="$(sTotalProducts)" secondvalue="$(sProductsFrag)" variabledestination="$(sTotalProducts)" />
              <joinstring firstvalue="$(sTotalProducts)" secondvalue="\" variabledestination="$(sTotalProducts)" />
              
                <mathematicaloperation variabledestination="$(iCount)" operator="+" firstvalue="1" secondvalue="$(iCount)" />
                <integeroperator operator="++" variablesource="$(iCounter)" />
            
             </while>
             
            <menuwithheader header="Recarga" options="$(sTotalProducts)" timeoutheader="14" timeout="20" variablereturn="$(sProductChoice)" />
          
             <stringvariable value="" variable="sIndexProduct" />
           
            <if variable="$(sProductChoice)" operator="notequalto" value="">
       
            <string.charat string="$(sProductChoice)" character_index="4" variablereturn="$(sIndexProduct)" />
            <stringtoint variablestring="$(sIndexProduct)" variableinteger="$(iCount)" />
            <integeroperator operator="--" variablesource="$(iCount)" />
            <string.elementat string="$(sTIM)" element_index="$(iCount)"  delimiter="|"   variablereturn="$(sProductsFrag)" />
            <string.elementat string="$(sProductsFrag)" element_index="0" delimiter="!" variablereturn="$(sCodeSell)" />
            <string.elementat string="$(sProductsFrag)" element_index="1" delimiter="!" variablereturn="$(sProdName)" />
            <string.elementat string="$(sProductsFrag)" element_index="2" delimiter="!" variablereturn="$(sValue)" />
           
            </if>
         
             </if>
              <cleandisplay />
             <if variable="$(sCodeSell)" operator="notequalto" value="">
               <if variable="$(sProdName)" operator="notequalto" value="">
                 
                     <display line="2" column="2" message="CONFIRMA RECARGA" />
                <display line="3" column="2" message="$(sProdName)" />
              <display line="5" column="2" message="1 SIM   2 NAO" />
              <readkey miliseconds="10000" variablereturn="$(sKey)" />
              
          
               <cleandisplay />
               <if variable="$(sKey)" operator="equalto" value="KEY_1">
               <integervariable value="0" variable="countRetires" />
              <stringvariable value="$(iPhone)" variable="$(iPhone2)" />
               <while variable="$(countRetires)" operator="lessthanorequalto" value="2">
              
              
               <display line="0" column="0" message="Confirme DDD e Numero" />
               <inputformat variable="$(iPhone2)" line="1" column="0" message="" format="99999999999" />

               <!-- validate phone --> 
               <callfunction name="PhoneValidate" />
                <if variable="$(iCheckFoneNumber)" operator="equalto" value="1">
              <!-- calls a method thats send a transactions --> 
             <callfunction name="SellRecharge" />
             <break />
          
             <else />
             <cleandisplay />
             <display line="1" column="0" message="O Numero nao confere" />
             <display line="2" column="0" message="Favor digitar novamente" />
               <stringvariable value="$(iPhone2)" variable="" />
             <wait miliseconds="2000" />
             
               </if>
               <integeroperator operator="++" variablesource="$(countRetires)" />
             
                </while>
              </if>
            </if>
             </if>
             
            <else />
       
            </if>
        
             </if>
             
           </if>
           
           <integervariable value="0" variable="$(iMenuCarrier)" />
           <!-- depends of sMenuChoice variable -->  
         
          
      </while>
     <else />
     <cleandisplay />
     <display line="0" column="0" message="Erro Ao Listar operadoras" />
       <wait miliseconds="2000" />
     </if>
      
      
      <waitkey />
</if>

<if variable="$(LoginType)" operator="equalto" value="3">
 <callfunction name="InitApp" />
 <cleandisplay />
 <display line="4" column="2" message="Estabecimento configurado." />
 <wait miliseconds="2000" />
 <exit />
</if>
<!-- display menu based on LoginType -->
<callfunction name="fn_conn_disconnect" />
</function>
        <!-- Main Function -->
   
        <!-- display Functions -->
<function name="PhoneValidate">
  
  <if variable="$(iPhone)" operator="equalto" value="$(iPhone2)">
   <if variable="$(iPhone)" operator="greaterthan" value="0">
      <integervariable value="1" variable="iCheckFoneNumber" />
   </if>
    <else />
      <integervariable value="0" variable="iCheckFoneNumber" />
   </if>
  
</function>
<!-- Deprecated  -->        
<function name="GetPhoneData">
  <cleandisplay />
   
   <inputinteger column="1" line="0" maximum="11" minimum="10" variable="$(iPhone)" message="Numero: " />
 
  <cleandisplay />
   <inputinteger column="1" line="0" maximum="11" minimum="10" variable="$(iPhone2)" message="Confirme Numero: " />
 
   <if variable="$(iPhone)" operator="equalto" value="$(iPhone2)">
   <if variable="$(iPhone)" operator="greaternotequalto" value="0">
      <integervariable value="1" variable="iCheckFoneNumber" />
   </if>
    <else />
      <integervariable value="0" variable="iCheckFoneNumber" />
   </if>
  
</function>

        <!-- display Functions -->

        <!-- Data Functions -->
<function name="SaveSetupData">
<string.fromhex string="$(sBufReceived)" variablereturn="$(sBufReceived)" />
<integervariable value="0" variable="iFileHandle" />
<integervariable value="0" variable="iBufferSize" />
<integervariable value="0" variable="iJsonMsgSize" />
<stringvariable value="" variable="sJsonMsg" />

<string.length value="$(sBufReceived)" variablereturn="$(iJsonMsgSize)" /> 
<string.tohex string="$(sBufReceived)" variablereturn="$(sJsonMsg)" />

    <file.open mode="w" filename="$(sFilesetup)" variablehandle="$(iFileHandle)" />
    <file.write handle="$(iFileHandle)" size="$(iJsonMsgSize)" buffer="$(sJsonMsg)" />
    <file.close handle="$(iFileHandle)" />

</function>
        <!-- Data Functions -->


        <!-- Business Functions -->

        <!-- Function que que exibe um menu de configuraçao inicial -->
<function name="InitApp">
<cleandisplay />
<display line="1" column="0" message="  Recarga Celular " />
<display line="2" column="1" message="Inicializando Aplicacao" />
<!-- call a service that setup the a file with a merchant data  -->
<callfunction name="InitAppService" />

</function>

<function name="AuthUser">

<!-- get data form the user interface -->
<cleandisplay />
<display line="2" column="2" message="INFORME " />
<display line="3" column="2" message="OPERADOR OU SUPERVISOR" />
<inputformat variable="$(dsPassword)" line="5" column="3" message="" format="******" />
</function>



<function name="LoadProductTable">
  <!-- Check if need update Products Table -->
  <!-- call a service and save data into bufferReceive Variable --> 
  <filesystem.filesize filename="producttable.json" variablereturn="$(ifileProductTableSize)" />
  <if variable="$(ifileProductTableSize)" operator="greaterthan" value="0"> 
    <json.getelement filename="producttable.json" jsonstring="dt_update" jsonvalue="$(sDateUpdate)" variablereturn="$(iRet)" />
    <stringvariable value="" variable="$(currentDate)" />
    <getdatetime format="d/M/yy" variabledestination="$(currentDate)"/>
    <cleandisplay />
    <display line="0" column="0" message="$(currentDate)" />
    <display line="1" column="0" message="$(sDateUpdate)" />
    <waitkey />
    <if variable="$(currentDate)" operator="notequalto" value="sDateUpdate">
       <callfunction name="ProductTableService" />
       <callfunction name="ProductTableSave" />
      
    </if>
    <else />
       <callfunction name="ProductTableService" />
       <callfunction name="ProductTableSave" />
    
  </if>
  

    
</function>


<function name="ProductTableSave">
  <cleandisplay />
  <display line="0" column="0" message="Atualizando tabela de produtos" />
<deletefile filename="producttable.json" />


<integervariable value="0" variable="iFileHandle" />
<integervariable value="0" variable="iBufferSize" />
<integervariable value="0" variable="iJsonMsgSize" />
<stringvariable value="" variable="sJsonMsg" />

	<string.fromhex string="$(sBufReceived)" variablereturn="$(sBufReceived)" />
<string.length value="$(sBufReceived)" variablereturn="$(iJsonMsgSize)" /> 
<!--<cleandisplay />-->
<!--<display line="0" column="0" message="$(sBufReceived)" />-->
<!--<waitkey />-->
<string.tohex string="$(sBufReceived)" variablereturn="$(sJsonMsg)" />


    <file.open mode="w" filename="producttable.json" variablehandle="$(iFileHandle)" />
    <file.write handle="$(iFileHandle)" size="$(iJsonMsgSize)" buffer="$(sJsonMsg)" />
    <file.close handle="$(iFileHandle)" />


</function>

<!-- Business Functions -->

<!-- Service Functions -->

<function name="SellRecharge">
<stringvariable value="" variable="$(sBuffer)" />
  <cleandisplay />
  <display line="4" column="5" message="  PROCESSANDO   " />
  <display line="5" column="5" message="----------------" />
  <stringvariable value="" variable="phonePart" />
  <integervariable  value="0" variable="iphonepartLenght" />
  <integervariable value="0" variable="iValueTemp" />
  <stringtoint variablestring="$(sValue)" variableinteger="$(iValueTemp)" />
  <!-- mathematicaloperation variabledestination="$(iValueTemp)" operator="/" firstvalue="$(iValueTemp)" secondvalue="100" /> -->
  <inttostring variableinteger="$(iValueTemp)" variablestring="$(sValue)" />
  <string.substring string="$(iPhone)" start="0" length="2" variablereturn="$(phonePart)" />
  <readfile filename="config.dat" key="numerodestepos" variabledestination="$(sPosSerialNumber)" />
  <stringvariable value="POST api/transaction/create?cp=" variable="$(sPostSellRecharge)" />
  
  <stringvariable value="$(sCodeSell)" variable="$(params)" />
  <!-- concat enpoint and parameters -->
<joinstring firstvalue="$(sBuffer)" secondvalue="$(sPostSellRecharge)" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="$(sCodeSell)" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="&amp;ddd=" variabledestination="$(sBuffer)" />
<string.trim string="$(phonePart)" variablereturn="$(phonePart)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="$(phonePart)" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="&amp;phone=" variabledestination="$(sBuffer)" />
<string.length value="$(iPhone)" variablereturn="$(iphonepartLenght)" />
<string.substring string="$(iPhone)" start="2" length="$(iphonepartLenght)" variablereturn="$(phonePart)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="$(phonePart)" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="&amp;pos=" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="$(sPosSerialNumber)" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="&amp;user=" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="$(AuthUserPassword)" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="&amp;carr=" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="$(sCarrier)" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="&amp;total=" variabledestination="$(sBuffer)" />

<joinstring firstvalue="$(sBuffer)" secondvalue="$(sValue)" variabledestination="$(sBuffer)" />


<callfunction name="preconnect" />

<string.tohex string="$(sBuffer)" variablereturn="$(sBuffer)" />
<string.length value="$(sBuffer)" variablereturn="$(sBufferSize)" />

<!-- send a message -->
<network.send buffer="$(sBuffer)" size="$(sBufferSize)" variablereturn="$(iReturn)" />

<if operator="equalto" value="1" variable="$(iReturn)">
    <callfunction name="fn_bufferReceived" />
    <string.fromhex string="$(sBufReceived)" variablereturn="$(sBufReceived)" />
    
    <!-- check if transaction has approved --> 
    <string.elementat string="$(sBufReceived)" element_index="0" delimiter="|" variablereturn="$(sTemp)" />
    <if variable="$(sTemp)" operator="equalto" value="0">
      <readfile filename="config.dat" key="model" variabledestination="$(sModelName)" />
      <if variable="$(sModelName)" operator="equalto" value="E265">
        <callfunction name="DisplayReceipt"/>
       <else />
       <callfunction name="PrintReceipt" />
      </if>
      <else />
      
        <!-- when error display recharge provider return error and restart operation -->
        <cleandisplay />
        <display line="2" column="2" message="Falha na transacao" />
       <string.elementat string="$(sBufReceived)" element_index="1" delimiter="|" variablereturn="$(sTemp)" />
        <joinstring firstvalue="COD " secondvalue="$(sTemp)" variabledestination="$(sTemp)" />
        <display line="3" column="2" message="$(sTemp)" />
        <string.elementat string="$(sBufReceived)" element_index="2" delimiter="|" variablereturn="$(sTemp)" />
        <display line="4" column="2" message="$(sTemp)" />
        <wait miliseconds="4000" />
        
    </if>
</if>
  
</function>

<function name="ShowCarriesProducts">
  <stringvariable value="" variable="$(sProducts)" />
 
  
</function>

<!-- preconnect -->
<function name="preconnect">
<preconnect variablestatus="$(iRet)" />
<if variable="$(iRet)" operator="notequalto" value="0">
    <cleandisplay />
    <display line="0" column="0" message="Erro de comunicacao" />
    <waitkeytimeout seconds="5" />
    <network.hostdisconnect />
    <exit />
    <else />
    <cleandisplay />
    
     <display line="4" column="5" message="  PROCESSANDO   " />
     <display line="5" column="5" message="----------------" />
</if>
</function>

<function name="ProductTableService">
 
 <stringvariable value="" variable="merchantDDD" />
 <json.getelement filename="$(sFilesetup)" jsonstring="DDD" jsonvalue="$(merchantDDD)" variablereturn="$(iRetFacade)" />
  <stringvariable value="SP" variable="merchantDDD" />
 <stringvariable value="POST /api/merchant/ProductTable?dsUF=" variable="sEndpointProductTablePos" />
 <joinstring firstvalue="$(sBuffer)" secondvalue="$(sEndpointProductTablePos)" variabledestination="$(sBuffer)" />
 <joinstring firstvalue="$(sBuffer)" secondvalue="$(merchantDDD)" variabledestination="$(sBuffer)" />
 <cleandisplay />

 <callfunction name="preconnect" />
 <cleandisplay />
 <display line="0" column="0" message="$(sBuffer)" />

<string.tohex string="$(sBuffer)" variablereturn="$(sBuffer)" />
<string.length value="$(sBuffer)" variablereturn="$(sBufferSize)" />

<!-- send a message -->
<network.send buffer="$(sBuffer)" size="$(sBufferSize)" variablereturn="$(iReturn)" />


<if operator="equalto" value="1" variable="$(iReturn)">
   <cleandisplay />
   
    <callfunction name="fn_bufferReceived" />
    <cleandisplay />
    <display line="0" column="0" message="Passou buffer receive table product" />
    <waitkey />
</if>
 
</function>

<function name="InitAppService">
<!-- variables to teste porpouse -->
<readfile filename="config.dat" key="numerodestepos" variabledestination="$(sPosSerialNumber)" />

<stringvariable value="POST /api/setup/init/?serialNumber=" variable="sEndpointSetupPos" />

<!-- concat enpoint and parameters -->
<joinstring firstvalue="$(sBuffer)" secondvalue="$(sEndpointSetupPos)" variabledestination="$(sBuffer)" />
<joinstring firstvalue="$(sBuffer)" secondvalue="$(sPosSerialNumber)" variabledestination="$(sBuffer)" />

<callfunction name="preconnect" />

<string.tohex string="$(sBuffer)" variablereturn="$(sBuffer)" />
<string.length value="$(sBuffer)" variablereturn="$(sBufferSize)" />

<!-- send a message -->
<network.send buffer="$(sBuffer)" size="$(sBufferSize)" variablereturn="$(iReturn)" />

<if operator="equalto" value="1" variable="$(iReturn)">
    <callfunction name="fn_bufferReceived" />
    <callfunction name="SaveSetupData" />
</if>
</function>


<!--- Load a ProductTable -->

<!-- Service Functions -->
<!-- Print Fuctions -->



<function name="PrintReceiptPin">
<cleandisplay />
  <display line="4" column="5" message="  IMPRIMINDO   " />
  <display line="5" column="5" message="----------------" />
 <stringvariable value="" variable="pinddate" />

   <printbitmap filename="logo_redepay_prt.bmp" variablereturn="$(iRet)" />
   <paperfeed />
  <getdatetime format="d/M/yy h:m:s" variabledestination="$(pinddate)" />
  <print message="$(pinddate)" />
  <print message="CASA DO AUDIO " />
  <print message="COD COMPRA: 41044" />
  <print message="OPERADORA: EMBRATEL" />
  <print message="Valor R$ 30.00 " />
  <print message="PIN: 64613TESTE549744" />
  <print message="LOTE 8  SERIE  101408" />
  <print message="Disque 0800-721-2177, aguarde instrucoes e digite a SENHA. Para DDD, digite o cod.cidade + telefone. Para DDI, digite 00 + cod.pais + cod.cidade + telefone. Atendimento 24h: 10321" />
  <paperfeed />
  
</function>


<function name="DisplayReceipt">
  
  <cleandisplay />
  <display line="4" column="3" message="TRANSACAO COM SUCESSO" />

  <wait miliseconds="1000" />
  <cleandisplay />

<stringvariable value="" variable="sDDD" />
<stringvariable value="" variable="sPhone" />

<wait miliseconds="200" />
   <json.getelement filename="filesetup.json" jsonstring="Name" jsonvalue="$(sName)" variablereturn="$(iRetFacade)" />
  <getdatetime format="d/M/yy h:m:s" variabledestination="$(currentDate)" />
  <display line="0" column="2" message="$(currentDate)" />
  <display line="1" column="2" message="$(sName)" />
  <string.elementat string="$(sBufReceived)"   element_index="1" delimiter="|" variablereturn="$(sTemp)" />
  <joinstring firstvalue="Cod Compra: " secondvalue="$(sTemp)" variabledestination="$(sTemp)" />
  <display line="2" column="2" message="$(sTemp)" />
  <string.elementat string="$(sBufReceived)" element_index="2" delimiter="|" variablereturn="$(sTemp)" />
  <joinstring firstvalue="Operadora: " secondvalue="$(sTemp)" variabledestination="$(sTemp)" />
 <display line="3" column="2" message="$(sTemp)" />
  <string.elementat string="$(sBufReceived)" element_index="3" delimiter="|" variablereturn="$(sTemp)" />
   <stringtoint variablestring="$(sTemp)" variableinteger="$(iTemp)"/>
   <mathematicaloperation variabledestination="$(iTemp)" operator="/" firstvalue="$(iTemp)" secondvalue="100" />
   <inttostring variableinteger="$(iTemp)" variablestring="$(sTemp)" />
  <joinstring firstvalue="Valor R$ " secondvalue="$(sTemp)" variabledestination="$(sTemp)" />
  <!-- <joinstring firstvalue="$(sTemp)" secondvalue=" Reais" variabledestination="$(sTemp)" /> -->
<display line="4" column="2" message="$(sTemp)" />
  <string.length value="$(iPhone)" variablereturn="$(iTemp)" />
  <mathematicaloperation variabledestination="$(iTemp)" operator="-" firstvalue="$(iTemp)" secondvalue="2" />
  <string.substring string="$(iPhone)" start="0" length="2" variablereturn="$(sDDD)" />
  <string.substring string="$(iPhone)" start="2" length="$(iTemp)" variablereturn="$(sPhone)" />
  <joinstring firstvalue="Numero:" secondvalue="$(sDDD)" variabledestination="$(sTemp)" />
  <joinstring firstvalue="$(sTemp)" secondvalue=" " variabledestination="$(sTemp)" />
  <joinstring firstvalue="$(sTemp)" secondvalue="$(sPhone)" variabledestination="$(sTemp)" />
  <display line="5" column="2" message="$(sTemp)" />
   <string.elementat string="$(sBufReceived)"   element_index="4" delimiter="|" variablereturn="$(sTemp)" />
   <joinstring firstvalue="NSU " secondvalue="$(sTemp)" variabledestination="$(sTemp)" />
  <display line="6" column="2" message="$(sTemp)" />
 <!--    <string.elementat string="$(sBufReceived)" element_index="5" delimiter="|" variablereturn="$(sTemp)" />-->
 <!--<display line="7" column="2" message="$(sTemp)" />-->

  <wait miliseconds="4000" />

</function>

<function name="PrintReceipt">
<cleandisplay />

<wait miliseconds="200" />


     <display line="4" column="5" message="  IMPRIMINDO   " />
   <display line="5" column="5" message="----------------" />
   <stringvariable value="" variable="sTemp" />
   <stringvariable value="" variable="sDDD" />
   <stringvariable value="" variable="sPhone" />
   <integervariable value="0" variable="iTemp" />
   
   <json.getelement filename="filesetup.json" jsonstring="Name" jsonvalue="$(sName)" variablereturn="$(iRetFacade)" />
        
   <printbitmap filename="logo_redepay_prt.bmp" variablereturn="$(iRet)" />
   <paperfeed />
  
  <getdatetime format="d/M/yy h:m:s" variabledestination="$(currentDate)" />
  <print message="$(currentDate)" />
  <print message="$(sName)" />
  <string.elementat string="$(sBufReceived)"   element_index="1" delimiter="|" variablereturn="$(sTemp)" />
  <joinstring firstvalue="Cod Compra: " secondvalue="$(sTemp)" variabledestination="$(sTemp)" />
  <print message="$(sTemp)" />
  <string.elementat string="$(sBufReceived)" element_index="2" delimiter="|" variablereturn="$(sTemp)" />
  <joinstring firstvalue="Operadora: " secondvalue="$(sTemp)" variabledestination="$(sTemp)" />
  <print message="$(sTemp)" />
  <string.elementat string="$(sBufReceived)" element_index="3" delimiter="|" variablereturn="$(sTemp)" />

   <stringtoint variablestring="$(sTemp)" variableinteger="$(iTemp)"/>
  
   <mathematicaloperation variabledestination="$(iTemp)" operator="/" firstvalue="$(iTemp)" secondvalue="100" />
   <inttostring variableinteger="$(iTemp)" variablestring="$(sTemp)" />
 
  <joinstring firstvalue="Valor R$ " secondvalue="$(sTemp)" variabledestination="$(sTemp)" />
  <!-- <joinstring firstvalue="$(sTemp)" secondvalue=" Reais" variabledestination="$(sTemp)" /> -->
  <print message="$(sTemp)" />
  <string.length value="$(iPhone)" variablereturn="$(iTemp)" />
  <mathematicaloperation variabledestination="$(iTemp)" operator="-" firstvalue="$(iTemp)" secondvalue="2" />
  <string.substring string="$(iPhone)" start="0" length="2" variablereturn="$(sDDD)" />

  <string.substring string="$(iPhone)" start="2" length="$(iTemp)" variablereturn="$(sPhone)" />
  <joinstring firstvalue="Numero:" secondvalue="$(sDDD)" variabledestination="$(sTemp)" />
  <joinstring firstvalue="$(sTemp)" secondvalue=" " variabledestination="$(sTemp)" />
  <joinstring firstvalue="$(sTemp)" secondvalue="$(sPhone)" variabledestination="$(sTemp)" />
  <print message="$(sTemp)"/>
  
   <string.elementat string="$(sBufReceived)"   element_index="4" delimiter="|" variablereturn="$(sTemp)" />
   <joinstring firstvalue="NSU " secondvalue="$(sTemp)" variabledestination="$(sTemp)" />
  <print message="$(sTemp)" />
     <string.elementat string="$(sBufReceived)" element_index="5" delimiter="|" variablereturn="$(sTemp)" />
  <print message="$(sTemp)" />
  <paperfeed />

</function>

        <!-- Print Fuctions -->



<!--<deletefile filename="$(sFilesetup)" />-->

<!-- fn_conn_disconnect -->
<function name="fn_conn_disconnect">
  <stringvariable value="" variable="sRet" />
  <integervariable value="-1" variable="iConnected"/>

  <readfile filename="config.dat" key="uclmedia" variabledestination="$(sRet)"/>

  <if variable="$(sRet)" operator="equalto" value="LANDLINE">
    <network.hostdisconnect />
    <shutdownmodem />
  <else />
    <network.hostdisconnect />
  </if>
</function>

<!-- ReadJson -->
<function name="ReadJson">

  
<json.getelement filename="filesetup.json" jsonstring="Auth" jsonvalue="$(sAuthData)" variablereturn="$(iRetFacade)" />
<json.getelement filename="filesetup.json" jsonstring="Name" jsonvalue="$(sName)" variablereturn="$(iRetFacade)" />
   
   <stringvariable value="" variable="sRetFacade" />
   <inttostring variableinteger="$(iRetFacade)" variablestring="$(sRetFacade)" />
    <display line="2" column="0" message="$(sRetFacade)" />
       <display line="3" column="0" message="Auth" />
     <display line="4" column="0" message="$(sAuthData)" />
        <display line="5" column="0" message="Name" />
     <display line="6" column="0" message="$(sName)" />
    <waitkey />

  
</function>

<!-- InitAppService -->

<!-- fn_bufferReceived -->


<function name="fn_bufferReceived">
	<stringvariable value="" variable="sBufReceived" />
	<stringvariable value="" variable="sBufReceivedTemp" />
	<integervariable value="0" variable="iBytesReceive" />
	<integervariable value="0" variable="iRetFind" />
	<integervariable value="0" variable="iSize" />

	<!-- Receive the 4 bytes of size -->
	<network.receive variablebuffer="$(sBufReceived)" maxsize="4" variablereceivedbytes="$(iBytesReceive)" variablereturn="$(iRet)" />

	<if variable="$(iRet)" operator="notequalto" value="1">
		<cleandisplay />
		<display line="2" column="0" message="   COMMUNICATION   " />
		<display line="3" column="0" message="      ERROR!       " />
		<waitkeytimeout seconds="5" />
		<callfunction name="fn_conn_disconnect" />
		<exit />
	</if>

	<!-- Receive the message -->
	<string.fromhex string="$(sBufReceived)" variablereturn="$(sBufReceived)" />
	<convert.toint base="16" number="$(sBufReceived)" variablereturn="$(iSize)" />
	<inttostring variableinteger="$(iSize)" variablestring="$(sRet)" />

  <!-- check receive size -->
	<!--<if variable="$(iSize)" operator="greaterthan" value="1024">-->
	 
	<!--	<integervariable value="0" variable="iBytesReceiveTemp" />-->
	<!--	<integervariable value="0" variable="iSizeTemp" />-->
	<!--	<stringvariable value="" variable="sBufReceivedTemp" />-->
	<!--	<wait miliseconds="800" />-->
	
	<!--	<network.receive variablebuffer="$(sBufReceived)" maxsize="1000" variablereceivedbytes="$(iBytesReceive)" variablereturn="$(iRet)" />-->

	<!--	<mathematicaloperation variabledestination="$(iSizeTemp)" operator="-" firstvalue="$(iSize)" secondvalue="1000" />-->

	<!--	<network.receive variablebuffer="$(sBufReceivedTemp)" maxsize="$(iSizeTemp)" variablereceivedbytes="$(iBytesReceiveTemp)" variablereturn="$(iRet)" />-->
	<!--	<string.fromhex string="$(sBufReceivedTemp)" variablereturn="$(sBufReceivedTemp)" />-->
	

	<!--<else />-->

		<network.receive variablebuffer="$(sBufReceived)" maxsize="1024" variablereceivedbytes="$(iBytesReceive)" variablereturn="$(iRet)" />
	<!--</if>--> 
<wait miliseconds="800" />
	<!-- check receive return -->
	<if variable="$(iRet)" operator="notequalto" value="1">
		<cleandisplay />
		<display line="2" column="0" message="   ERRO  " />
		<display line="3" column="0" message="       COMUNICACAO!     " />
		<waitkeytimeout seconds="5" />
		<callfunction name="fn_conn_disconnect" />
		<exit />
	</if>

	<!-- convert from HEXASCII -->


	<callfunction name="fn_conn_disconnect" />

	<!-- check response -->
  <if variable="$(sBufReceived)" operator="notequalto" value="">

	<else />
	  <cleandisplay />
		<display line="2" column="0" message="   EMPTY RESPONSE  " />
		<display line="3" column="0" message="       ERROR!     " />
		<waitkeytimeout seconds="5" />
		<callfunction name="fn_conn_disconnect" />
		<exit />
	</if>
</function>



<!-- SaveSetupData -->





